@page "/Login/{isRegistered:bool?}"

@using DatingApp.FrontEnd.Gateway.DotNetGateway
@using DatingApp.FrontEnd.Infrastructure
@using DatingApp.FrontEnd.Models
@using DatingApp.FrontEnd.Models.CurrentUser
@using Microsoft.AspNetCore.Components.Server
@using System.Security.Claims

@inject NavigationManager NavigationManager
@inject GatewayAdapter gtwAdapter
@inject IBlazorStrap _blazorStrap
@inject IAuthenticationStateHandler _authStateHandler;

<div class="row login-content">
    <div class="col-lg-1 login-main-diff">
        <div class="row title-div">
            <h3>Login</h3>
        </div>
        <div class="row title-div">
            <p>Hey, Enter your details to sign in to your account</p>
        </div>

        <EditForm class="row" Model="@userLogin" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <BSCol Position="Position.Relative" ColumnMedium="12">
                <BSValidationSummary />
            </BSCol>

            @*Spinner*@
            @if (isLogginProcessing)
            {
                <div class="spinner-div">
                    <BSSpinner id="spinner" Class="spinner" Color="BSColor.Warning" Size="Size.ExtraLarge" />
                </div>
            }

            <div class="form-control-row input-group mb-4">
                <span class="input-group-text"><i class="fa-regular fa-user"></i></span>
                <BSInput placeholder="Enter Email / Username" @bind-Value="userLogin.Login" />
            </div>
            <div class="form-control-row input-group mb-4">
                <span class="input-group-text"><i class="fa-solid fa-lock"></i></span>
                <BSInput InputType="InputType.Password" placeholder="Password" @bind-Value="userLogin.Password" />
            </div>

            <div class="row form-text-row">
                <a class="btn-link">Having troubles with sing in?</a>
            </div>

            <div class="row form-control-row">
                <BSButton type="submit" id="login-btn" Color="BSColor.Success" Class="login-btn" disabled="@(isLogginProcessing)">Sing in</BSButton>
            </div>

            @if(!IsRegistered)
            {
                <div class="row form-text-row">
                    <p>Don't have account?</p>
                    <a class="btn-link" @onclick="OnRegisterClick">Register Now</a>
                </div>
            }
        </EditForm>
    </div>
</div>

@*Warning toaster*@
<BSToaster />

@code {
    UserLogin userLogin = new();
    bool showWarning;
    bool isLogginProcessing;

    [Parameter]
    public bool IsRegistered { get; set; } = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();

#if DEBUG
    userLogin = new UserLogin
    {
    Login = "antoshens",
    Password = "Anton123"
    };
#endif
    }

    void OnRegisterClick()
    {
        NavigationManager.NavigateTo("Register");
    }

    async Task HandleValidSubmit()
    {
        isLogginProcessing = true;
        var response = await gtwAdapter.LoginAsync(userLogin);
        isLogginProcessing = false;

        if (response != null)
        {
            if (!string.IsNullOrEmpty(response.Token))
            {
                await _authStateHandler.WriteToken(response.Token);
                await _authStateHandler.UpdateState();

                NavigationManager.NavigateTo("Dashboard");
            }
            else
            {
                var warningMessage = "Something went wrong during login";
                ShowToaster(warningMessage, 5000);
            }
        }
        else
        {
            var warningMessage = "Login or password is incorrect";
            ShowToaster(warningMessage, 5000);
        }
    }

    private void ShowToaster(string message, int timer)
    {
        _blazorStrap.Toaster.Add(message, o =>
        {
            o.CloseAfter = timer;
            o.Toast = Toast.TopLeft;
            o.Color = BSColor.Warning;
        });
    }
}
