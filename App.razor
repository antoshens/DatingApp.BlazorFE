@using DatingApp.FrontEnd.Models.CurrentUser;

@inject NavigationManager _navigationManager;
@inject IHostEnvironmentAuthenticationStateProvider _hostAuthentication;
@inject ICurrentUser _currentUser;

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <FocusOnNavigate RouteData="@routeData" Selector="h1" />
                </Authorizing>

                <NotAuthorized>
                    <DatingApp.FrontEnd.Pages.Login.Login></DatingApp.FrontEnd.Pages.Login.Login>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>

        <NotFound>
            <PageTitle>Oupss... Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="not-found-container row">
                    <div class="row not-found-message">
                        <h1>The page that you're looking for, can't be found</h1>
                    </div>

                    <div class="row not-found-button-container">
                        <button type="button" class="btn not-found-button" onclick="@OnGoHomeClick">Bring me back Home</button>
                    </div>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var token = await _currentUser.GetClaimsPrincipalAsync();
        _hostAuthentication.SetAuthenticationState(Task.FromResult(new AuthenticationState(token)));
    }

    void OnGoHomeClick()
    {
        _navigationManager.NavigateTo("Dashboard");
    }
}
